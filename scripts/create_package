#! /bin/sh

usage="Syntax: fakeroot $0 debian-directory compilation-directory

It will create a package into debian-directory from the files of compilation-directory"

dir=$1
if [ -z "$dir" ]
then
  echo $usage
  exit 1
fi

source=$2
if [ -z "$dir" ]
then
  echo $usage
  exit 1
fi

if [ `id -u` -ne 0 ]
then
  echo "Run this script under fakeroot !"
  echo $usage
  exit 1
fi

if [ ! -f "${dir}/control" ]
then
  echo "$dir contains no debian control file. Aborting."
  exit 1
fi

build="${dir}/build"
if [ -e $build ]
then
  /bin/rm -rf $build
fi


# Create the directory structure
mkdir -p ${build}
mkdir -p ${build}/usr/bin
mkdir -p ${build}/usr/share/doc/advene
mkdir -p ${build}/usr/share/advene/pixmaps
mkdir -p ${build}/usr/lib/advene/scripts

# Copy the files into the directory structure
cp ${source}/*.py ${build}/usr/lib/advene
cp ${source}/advenetool ${build}/usr/lib/advene
cp ${source}/scripts/launcher ${build}/usr/bin/advene
chmod 755 ${build}/usr/bin/advene
cp ${source}/advene.glade ${build}/usr/share/advene
cp ${source}/advene.gladep ${build}/usr/share/advene
cp ${source}/template.xml ${build}/usr/share/advene
cp ${source}/default_rules.xml ${build}/usr/share/advene
cp ${source}/pixmaps/*.xpm ${build}/usr/share/advene/pixmaps
cp ${source}/pixmaps/*.png ${build}/usr/share/advene/pixmaps
rsync -r --exclude CVS --exclude '*~' ${source}/web/* ${build}/usr/share/advene/web
rsync --exclude '*~' ${source}/doc/* ${build}/usr/share/doc/advene

# Copy scripts
cp ${source}/scripts/sub2xml.py ${build}/usr/lib/advene/scripts
cp ${source}/scripts/get_stream_info ${build}/usr/lib/advene/scripts

# Copy debian control information into the tree
mkdir ${build}/DEBIAN
chmod 0755 ${build}/DEBIAN
cp ${dir}/control ${build}/DEBIAN

# Fix permissions
chmod -R a+rX ${build}

# The tree is populated. We can create the package
dpkg-deb --build ${build} ${dir}

# Remove the build directory
/bin/rm -rf $build
