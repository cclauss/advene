* Where to start reading the Advene code ?

The Advene model (lib/advene/model) is independant of the rest of the
application, and can be reused in other applications. 

The main configuration options of the applications are located in
advene.core.config. The module, upon load, defines a
advene.core.config.data instance which holds correct values and is a
singleton shared by all other modules importing advene.core.config.

The Advene application is articulated around the
advene.core.controller class. This class holds a reference to 
   * the player (controller.player, instance of advene.core.mediacontrol)
   * the ECA engine (controller.event_handler, instance of advene.rules.ecaengine)
   * the loaded package (controller.package, instance of advene.model.package)
   * the webserver (controller.server, instance of advene.core.webserver)

It also maintains important state information such as
controller.active_annotations

The controller should centralize all interaction (esp. interaction
with the player through the controller.update_status method) in order
to take advantage of the event notification system. 

The update of the information implies that the controller.update
method is called regularly. This is done by the GUI mainloop for the
GUI version.

The GUI starts in advene.gui.main.

* Structure of the Advene code

** Advene model

- the Advene model is implemented in lib/advene/model. It offers
  access to the data, supports saving/loading data from xml packages,
  and deals with TAL/TALES issues.
