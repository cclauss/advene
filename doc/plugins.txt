Plugin architecture for Advene
------------------------------

Types of plugins
================

  * content-type handler (editor / viewer)
  * actions
  * importers
  * global methods

Location of plugins
===================

For the builtin core features: lib/advene/plugins

For the builtin GUI features: lib/advene/gui/plugins

For user-defined plugins: $HOME/.advene/plugins

Implementation
==============

A plugin is a module. It *must* have :
  * a name attribute
  * a register(controller=None) function

The register function is called, with the controller as parameter,
upon loading. It has to register the plugin's components in the Advene
infrastructure.

Example
=======

Here is a minimal plugin:

  name="Test plugin"
  
  def register(controller=None):
      controller.log("Registered %s" % name)
  
  class FooBar:
      def __init__(self, controller=None):
      	  self.controller=controller


You can find a real example in lib/advene/gui/plugins/actions.py
